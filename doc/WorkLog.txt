Work Log

Contents
    Work Due
    Work Done

<h1>Work Due
    Database corruption possible with save single node/title entry - Fix 

    Allow for the deletion of all elements in a model drawing
    
    Calculation of flow label width dubious

    Set a page edited flag id any alteration is made to a page.
    
    Check with user for save on model search or select

    Hide Page Details button until a page is loaded

    Prevent saving of a page without title

    Load Page from alphabetical selection list
        * Check why model details not displayed, but visual is.
        * Allow for an existing current model
        * Clear the stage before model loaded

    Handle Drawing edit options etc.
        * Do the analysis for edit mode
        * Add an edit option directly to flow drawing options
        * Hide model edit prompts text unless in model edit mode
        * Make the save button visible after the start of an edit
            * Model
            * Node
            * Flow
        * flows
        nodes
        * model
        * Check resave after updates
        
    Check the display and usage of the page edit options
        * New
        * Edit
        * Save
            * Redraft selection titles list after save, if a new model (no id).
        * Delete
        * Cancel

    * When new model is selected and there is a current model, allow for save operation
    
    Add current user automatically to authors for a new model (when model details submitted).

    In page load operations detect whether the page is authored by the user etc.

    Allow for change of login

    Add the Zoom In page functionality

    Make an object for the hover text code
      
    Add Zoom Back button to page options

    Update the README with user features changes

<h1>Work Done

    11/07/2024
    
    * Test Page Save from Javascript
        * Once saved, mark the current page data as update = true

    * Do the Page Details button operation

    * Do Model Page Details edit option
        * Do analysis
        * Allow for different classes of user in the various edit options of the modal model form

    09/07/2024

    * Add the php update page save procedures

        * Do update save page analysis

        * Do update page details
        * Do update authors
        * Do update references
        * Do update nodes
            * Do analysis of update node details
            * Prevent duplicate node labels in user interface
        * Do update flows

    * Add PHP Page Delete operations

        * Allow for page child delete

    * Test and Debug the php

    * Use formatted rather than concatenated strings {$dbConn->error}

    29/06/2024
    
    * On the model details form submit - strip redundant white space and "." from 
    external authors and reference author

    * Rework Page Authors:
        * Split as User Authors, External Authors

        * Modify the model details form

        * Change the JSON formats for page authors to:
            * userAuthors: [{"id":, "username": }]
            * externalAuthors: [{"id":, "author": }]
            * reference author {"id":, "author": }

        * Update Analysis
        * Update README
        * Update test-model data
        * Update php
            * receive-page.php, debug scripts allow for missing id in update data.
            * extract-page.php
            * add-page.php
            * update-page.php

    14/06/2024

    * Clear-out the console logging

    * Add the page hierarchical id to the page details

    * Provide the complete specifications in the analysis for the flow definition objects

    * Strip HTML chars from authors, references and hyperlinks

    * trim all input fields


    * Create the mysql tables
        * run/check the php code (create-tables.php)

    * Define the php procedures for saving a flow model page to the database

    * Page Save Operations

    * For the sake of readability add all functions to objects of similar 
        name to module file

        * Retest code so far 

    * Set-up the model Details button events


    * When edit mode is on, include a message line to click the stage to add a node.

    
    * Check-out the textareas
    
    * Do the diagram editing operations

        * Add node operation

            * Node Details Modal HTML

            * Node details add and draw

            * Node Details dismiss operation

            * Adjust the node click position to take account of the scale.

            * Check delete node

        * Do the event operations analysis for the node buttons

        * Do the node details option button code

            * Fix the wrong node num loaded for the button click

            * Allow for the update of the selected node

        * Do node drag operation

        * Do the Add Flow operation from the Flow Link node button

            * Do the analysis for the creation of a flow Link

            * Do the flow details modal & associated code

            * Check the analysis for flow drawing mode

            * Add a draw flow button to the flow modal

            * Implement the draw flow procedures

                * Modify the click event for the stage

                * Allow for flow node drag

                * Allow for flow node delete

                * Allow for flow node insert

                * Allow for flow label drag

                * Insert the flow direction arrows

                * Double click to delete flow arrow

                Check-out zIndex in the Konva manual

            * Do the Flow Done procedures
            
                * Add the flow arrow position nodes to the flow details data and database

                * Adjust the position of the label within the group to the end of the group

                * Extract the point positions and save the data via flow-details.js
                
            * Do the visual delete flow function

            * Do the flow dismiss operation

            * Do Cancel Flow Draw button

            * Do the edit flow details operations
            
    * Rework/replace the Konva flow-diagram code with the structured
    model.

    15/05/2024 
    
    * Do the new flow model modal

        * Add an indicator to show that an item has been submitted

        * Do the references section of the modal form

        * Do the dismiss model form modal operation

        * Update the model title when the New model option is submitted
        
        * Update the page details on the main page when form submitted

        * Do the reset display status for modal form reload


    * Include an edit mode cancel option when edit mode is on - analyse

    13/05/2024
    
    * Transfer project to vanilla javascript in place of react

    * Set-up the flow-diagram testing using the Konva graphics
    library in place of PIXI.

    * Further the program structure analysis

    * Set-up the html for the dataflow page

        Page Title
        Search Input Display
        Flow Model Title
        Flow Page Title
        Details Button
        Page Action Buttons

    * Fix the stage size at start up

    * Do the user login/register modal

        * Do the analysis

        * Document the user table

        * Write the create database script

        * Do the user table PHP/MySql code

            * Create User tables

            * add-user.php

            * login.php


        * Do the modal form on the Flow Model Page

        * Write the corresponding javascript

           * Do the login function

        * Test/Debug

           * Test the user login/sign-up options

                & Editor

                * User

                * Owner

    22/04/2024

    Phase I Testing

    * Set-up the dev environment for experimentation with
    reactflow

    * Draft the content of the introductory page

	* Set-up the dev environment for working with *pixiJS, *vanilla
	javascript, php, mysql and *bootstrap.

    * Do the initial preparations of the flow diagram page
        * Do the initial bootstrap navbar

        * Set-up the initial pixi stage

